/******************************************************************
 *           ESP8266 NodeMCU MQTT PROGRAM
 *           ============================
 * In this program a push-button switch is conencted to port
 * GPIO2 of the EXP8266 NodeMCU. Similarly, an LED is connected
 * to port GPIO2 of the Zero 2 W. The NodeMCU is the client.
 * Pressing the button toggles the LED.
 * 
 * Author: Dogan Ibrahim
 * File  : mqttesp8266
 * Date  : Janury, 2022
 * 
 ******************************************************************/
#include <ESP8266WiFi.h>
#include <PubSubClient.h>

const char* ssid = "BTHomeSpot-XNH";                // WiFi SSID
const char* password = "49350bbbb";                 // WiFi password
const char* mqtt_server = "192.168.1.238";          // Zero 2 W IP
const byte Button = 2;                              // Button pin
const char *ID = "Example_Button";
bool ButtonState = 0;
const char *Topic = "kitchen/light/";               // MQTT TOPIC

WiFiClient wclient;
PubSubClient client(wclient);

//
// Connect to local Wi-Fi router. This function connects the
// NodeMCU to the local WiFi router. Because the Serial Monitor
// is enabled, we can see the progress in the monitor
//
void setup_wifi() 
{
    Serial.print("\nESP32 NodeMCU connecting to: ");
    Serial.println(ssid);
    WiFi.begin(ssid, password);

    while (WiFi.status() != WL_CONNECTED) 
    {
          delay(500);
          Serial.print(".");
    }
    Serial.println("\nConnected to Wi-Fi");
}


//
// This is the setup routine. Here the Serial Monitor is enabled,
// Button is configured as digital input, and the WiFi is setup.
// Notice that the MQTT server (Zero 2 W) operate on port 1883
//
void setup() 
{
      Serial.begin(115200);                       // Enable Serial Monitor
      pinMode(Button, INPUT);                     // Button is input
      digitalWrite(Button, HIGH);                 // Pull Button HIGH
      delay(100);                                 // Small delay
      setup_wifi();                               // Setup WiFi
      client.setServer(mqtt_server, 1883);        // Define client
}


//
// Reconnect to client if the connection is lost
//
void reconnect() 
{
    while (!client.connected()) 
    {
          Serial.print("Attempting MQTT connection...");
          if (client.connect(ID)) 
          {
              Serial.println("connected");
              Serial.print("Publishing to: ");
              Serial.println(Topic);
              Serial.println('\n');
          } 
          else 
          {
              Serial.println(" Trying to connect again in 5 seconds");
              delay(5000);
          }
    }
}

//
// Main program loop. Check the Button status and publish on or off
// depending on this status
//
void loop() 
{
      if (!client.connected()) reconnect();
      client.loop();

      if(digitalRead(Button) == 0)                  // If button pressed 
      {
          ButtonState = !ButtonState;               // Toggle ButtonState
          if(ButtonState == 1)                      // If ON
          {
              client.publish(Topic, "on");          // Publish "on"
              Serial.println((String)Topic + " is ON");
          }
       else
       {
            client.publish(Topic, "off");           // Publish "off"
            Serial.println((String)Topic + " is OFF");
       }

        while(digitalRead(Button) == 0)           // Wait switch to release
        {
            delay(50);
        }
}
}




